// Generated by CoffeeScript 2.5.1
import {
  Api
} from './api.js';

export var serveBundles = function({path}) {
  return Api.staticStack.push(async function(context, next) {
    var jspath;
    console.log('static stack testing', context.request.url.pathname);
    jspath = context.request.url.pathname === '/' ? '/index.js' : context.request.url.pathname + '.js';
    console.log('checking', path + jspath);
    if ((await Deno.stat(path + jspath).then(function(x) {
      return true;
    }).catch(function() {
      return false;
    }))) {
      return context.response.html = `<script src='${jspath}' type='module'></script>`;
    } else {
      return next();
    }
  });
};

export var watchBundle = async function() {
  console.log('Running rollup watcher...');
  // process = await Deno.run cmd: "rollup.cmd -w -c .config/rollup.config.mjs".split(' ')
  console.log('Revoking run permission.');
  await Deno.permissions.revoke({
    name: 'run'
  });
  return window.addEventListener('unload', () => {
    return console.log('EVENT unload event');
  });
};

// await process.close()
